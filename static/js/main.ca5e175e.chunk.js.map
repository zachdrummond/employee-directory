{"version":3,"sources":["components/EmployeeRows.jsx","components/SearchBar.jsx","components/EmployeeTable.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["EmployeeRows","state","employeeFilter","employees","filter","employee","name","first","last","search","toLowerCase","startsWith","map","index","src","picture","medium","alt","cell","email","moment","dob","date","format","SearchBar","props","Form","inline","className","FormControl","onChange","handleInputChange","value","type","placeholder","id","EmployeeTable","componentDidMount","axios","get","then","response","setState","data","results","catch","error","console","log","event","target","sortTableByName","sort","a","b","sortTableByDateOfBirth","this","Table","striped","bordered","hover","Button","variant","onClick","size","width","height","viewBox","class","fill","xmlns","fill-rule","d","Component","Header","Jumbotron","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca5e175e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst EmployeeRows = ({ state }) => {\r\n  // Filters the employees array by the user's input\r\n  const employeeFilter = state.employees.filter((employee) => {\r\n    const { first, last } = employee.name;\r\n    const search = state.search;\r\n    if (\r\n      first.toLowerCase().startsWith(search.toLowerCase()) ||\r\n      last.toLowerCase().startsWith(search.toLowerCase())\r\n    ) {\r\n      return employee;\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* Maps the filtered employees array to display on the page */}\r\n      {employeeFilter.map((employee, index) => (\r\n        <tr key={index}>\r\n          <td>\r\n            <img src={employee.picture.medium} alt=\"Employee\" />\r\n          </td>\r\n          <td>\r\n            {employee.name.first} {employee.name.last}\r\n          </td>\r\n          <td>{employee.cell}</td>\r\n          <td>{employee.email}</td>\r\n          <td>{moment(employee.dob.date).format(\"MM/DD/YYYY\")}</td>\r\n        </tr>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeeRows;\r\n","import Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nconst SearchBar = (props) => {\r\n  return (\r\n    <Form inline className=\"justify-content-center mb-5\">\r\n      <FormControl\r\n        onChange={props.handleInputChange}\r\n        value={props.value}\r\n        name=\"search\"\r\n        type=\"text\"\r\n        placeholder=\"Search by Name\"\r\n        className=\"mr-sm-2\"\r\n        id=\"search\"\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport EmployeeRows from \"./EmployeeRows\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport \"../styles/EmployeeTable.css\";\r\n\r\nclass EmployeeTable extends Component {\r\n  state = {\r\n    employees: [],\r\n    search: \"\",\r\n  };\r\n\r\n  // Calls the API and sets the state as soon as the component mounts\r\n  componentDidMount = () => {\r\n    axios\r\n      .get(\"https://randomuser.me/api/?results=20&nat=us\")\r\n      .then((response) => {\r\n        this.setState({ employees: response.data.results });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  // Function to set the state based on the user's input\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // Function to sort the table by employee name\r\n  sortTableByName = () => {\r\n    this.setState({\r\n      employees: this.state.employees.sort((a, b) => {\r\n        if (a.name.last < b.name.last) {\r\n          return -1;\r\n        } else if (a.name.last > b.name.last) {\r\n          return 1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      }),\r\n    });\r\n  };\r\n\r\n  // Function to sort the table by employee date of birth\r\n  sortTableByDateOfBirth = () => {\r\n    this.setState({\r\n      employees: this.state.employees.sort((a, b) => {\r\n        if (a.dob.date < b.dob.date) {\r\n          return -1;\r\n        } else if (a.dob.date > b.dob.date) {\r\n          return 1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      }),\r\n    });\r\n  };\r\n\r\n  // Renders this element to the page\r\n  render() {\r\n    return (\r\n      <>\r\n        <SearchBar\r\n          value={this.state.search}\r\n          handleInputChange={this.handleInputChange}\r\n        />\r\n        <Table striped bordered hover className=\"text-center eTable\">\r\n          <thead>\r\n            <tr>\r\n              <th>Image</th>\r\n              <th>\r\n                Name\r\n                <Button variant=\"link\" onClick={this.sortTableByName} size=\"sm\">\r\n                  {/* A-Z Icon */}\r\n                  <svg\r\n                    width=\"1em\"\r\n                    height=\"1em\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    class=\"bi bi-sort-alpha-down\"\r\n                    fill=\"currentColor\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      fill-rule=\"evenodd\"\r\n                      d=\"M4 2a.5.5 0 0 1 .5.5v11a.5.5 0 0 1-1 0v-11A.5.5 0 0 1 4 2z\"\r\n                    />\r\n                    <path\r\n                      fill-rule=\"evenodd\"\r\n                      d=\"M6.354 11.146a.5.5 0 0 1 0 .708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 0 1 .708-.708L4 12.793l1.646-1.647a.5.5 0 0 1 .708 0z\"\r\n                    />\r\n                    <path d=\"M9.664 7l.418-1.371h1.781L12.281 7h1.121l-1.78-5.332h-1.235L8.597 7h1.067zM11 2.687l.652 2.157h-1.351l.652-2.157H11zM9.027 14h3.934v-.867h-2.645v-.055l2.567-3.719v-.691H9.098v.867h2.507v.055l-2.578 3.719V14z\" />\r\n                  </svg>\r\n                </Button>\r\n              </th>\r\n              <th>Phone</th>\r\n              <th>Email</th>\r\n              <th>\r\n                Date of Birth\r\n                <Button\r\n                  variant=\"link\"\r\n                  onClick={this.sortTableByDateOfBirth}\r\n                  size=\"sm\"\r\n                >\r\n                  {/* 1-9 Icon */}\r\n                  <svg\r\n                    width=\"1em\"\r\n                    height=\"1em\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    class=\"bi bi-sort-numeric-down\"\r\n                    fill=\"currentColor\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      fill-rule=\"evenodd\"\r\n                      d=\"M4 2a.5.5 0 0 1 .5.5v11a.5.5 0 0 1-1 0v-11A.5.5 0 0 1 4 2z\"\r\n                    />\r\n                    <path\r\n                      fill-rule=\"evenodd\"\r\n                      d=\"M6.354 11.146a.5.5 0 0 1 0 .708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 0 1 .708-.708L4 12.793l1.646-1.647a.5.5 0 0 1 .708 0z\"\r\n                    />\r\n                    <path d=\"M12.438 7V1.668H11.39l-1.262.906v.969l1.21-.86h.052V7h1.046zm-2.84 5.82c.054.621.625 1.278 1.761 1.278 1.422 0 2.145-.98 2.145-2.848 0-2.05-.973-2.688-2.063-2.688-1.125 0-1.972.688-1.972 1.836 0 1.145.808 1.758 1.719 1.758.69 0 1.113-.351 1.261-.742h.059c.031 1.027-.309 1.856-1.133 1.856-.43 0-.715-.227-.773-.45H9.598zm2.757-2.43c0 .637-.43.973-.933.973-.516 0-.934-.34-.934-.98 0-.625.407-1 .926-1 .543 0 .941.375.941 1.008z\" />\r\n                  </svg>\r\n                </Button>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <EmployeeRows state={this.state} />\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeTable;\r\n","import Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport \"../styles/Header.css\"\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Jumbotron className=\"text-center p-3 jumbotron\">\r\n      <h1>Employee Directory</h1>\r\n      <p>\r\n        Click on headers to filter by heading or use the search box to narrow\r\n        your results.\r\n      </p>\r\n    </Jumbotron>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import EmployeeTable from \"./components/EmployeeTable\";\nimport Header from \"./components/Header\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Container>\n        <EmployeeTable />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}